;; This sample is NOT parseable yet. It exists to serve as motivation for what
;; can eventually be parsed.

;; Only one defcfg is allowed
(defcfg
  win-input low-level-hook
  win-output send-event-sink
  linux-dev /dev/input/by-path/platform-i8042-serio-0-event-kbd

  ;; Unlike kmonad, fallthrough configuration does not exist. Fallthrough is always true.
)

;; Only one defsrc is allowed
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(defalias
  ;; toggle layer aliases
  num (layer-toggle numbers)
  chr (layer-toggle chords)
  arr (layer-toggle arrows)
  msc (layer-toggle misc)

  ;; move between qwerty and dvorak
  dvk (layer-base dvorak)
  qwr (layer-base qwerty)

  ;; tap for key, hold for toggle layers
  ;; Parameter order:
  ;; 1. tap timeout
  ;; 2. hold timeout
  ;; 3. tap action
  ;; 4. hold action
  ;;
  ;; The hold timeout is the number of milliseconds after which the hold action
  ;; will activate.
  ;;
  ;; The tap timeout is best explained in a roundabout way. When you press and
  ;; hold a stardard key on your keyboard (e.g. 'a'), your operating system will
  ;; read that and keep sending 'a' to the active application. To be able to
  ;; replicate this behaviour with a tap-hold key, you must double-tap the key
  ;; within the tap timeout window (number is milliseconds). Simply holding
  ;; the key results in the hold action activating, which is why you you need to
  ;; double-tap for the tap action to stay pressed.
  anm (tap-hold 200 200 a @num)
  och (tap-hold 200 200 o @arr)
  ear (tap-hold 200 200 e @chr)
  umc (tap-hold 200 200 u @msc)

  ;; tap for capslk, hold for lctl
  cap (tap-hold 200 200 caps lctl)

  ;; chords
  ccv C-S-v
  ccc C-S-c

  ;; shifted keys
  { S-[
  } S-]
)

(deflayer qwerty
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet @dvk
)

(deflayer dvorak
  grv  1    2    3    4    5    6    7    8    9    0    [    ]    bspc
  tab  '    ,    .    p    y    f    g    c    r    l    /    =    \
  @cap @anm @och @ear @umc i    d    h    t    n    s    -    ret
  lsft ;    q    j    k    x    b    m    w    v    z    rsft
  lctl lmet lalt           spc            ralt rmet @qwr
)

(deflayer numbers
  _    _    _    _    _    _    _    7    8    9    _    _    _    _
  _    _    _    _    _    XX   _    4    5    6    -    _    _    _
  _    _    C-z  _    _    XX   _    1    2    3    +    _    _
  _    C-z  C-x  C-c  C-v  XX   _    0    0    .    /    _
  _    _    _              _              _    _    _
)

(deflayer misc
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    @{   @}    [    ]    _    _    _
  _    _    _    _    C-u  _    _    bspc esc  ret  _    _    _
  _    C-z  C-x  C-c  C-v  _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)


(deflayer chords
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    @ccc _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    @ccv _    _
  _    _    _              _              _    _    _
)

(deflayer arrows
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    up   _    _    _    _    _
  _    _    _    _    _    _    home left down rght end  _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)
